{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SlicePipe {\n  transform(value, maxCharCount) {\n    if (value.length <= maxCharCount) {\n      return value;\n    }\n    const reversed = value.split('').reverse().join('');\n    const truncated = reversed.slice(0, maxCharCount);\n    const result = truncated.split('').reverse().join('') + '...';\n    console.log(result);\n    return result;\n  }\n}\nSlicePipe.ɵfac = function SlicePipe_Factory(t) {\n  return new (t || SlicePipe)();\n};\nSlicePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"slice\",\n  type: SlicePipe,\n  pure: true\n});","map":{"version":3,"names":["SlicePipe","transform","value","maxCharCount","length","reversed","split","reverse","join","truncated","slice","result","console","log","pure"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\shared\\pipes\\slice.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n  name: 'slice'\n})\nexport class SlicePipe implements PipeTransform {\n  transform(value: string, maxCharCount: number): string {\n    if (value.length <= maxCharCount) {\n      return value;\n    }\n    const reversed = value.split('').reverse().join('');\n    const truncated = reversed.slice(0, maxCharCount);\n    const result = truncated.split('').reverse().join('') + '...';\n    console.log(result)\n    return result;\n  }\n}\n"],"mappings":";AAMA,OAAM,MAAOA,SAAS;EACpBC,SAASA,CAACC,KAAa,EAAEC,YAAoB;IAC3C,IAAID,KAAK,CAACE,MAAM,IAAID,YAAY,EAAE;MAChC,OAAOD,KAAK;;IAEd,MAAMG,QAAQ,GAAGH,KAAK,CAACI,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,EAAE,CAAC;IACnD,MAAMC,SAAS,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAEP,YAAY,CAAC;IACjD,MAAMQ,MAAM,GAAGF,SAAS,CAACH,KAAK,CAAC,EAAE,CAAC,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,EAAE,CAAC,GAAG,KAAK;IAC7DI,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,OAAOA,MAAM;EACf;;AAVWX,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;;QAATA,SAAS;EAAAc,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}