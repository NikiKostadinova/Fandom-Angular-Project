{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  getBooks() {\n    const {\n      apiUrl\n    } = environment;\n    return this.http.get(`${apiUrl}/api/books`);\n  }\n  getBook(id) {\n    const {\n      apiUrl\n    } = environment;\n    return this.http.get(`${apiUrl}/api/books/${id}`);\n  }\n  updateBook(bookToUpdate) {\n    const {\n      apiUrl\n    } = environment;\n    // const url = `${apiUrl}/api/books/${bookToUpdate.id}`;\n    return this.http.put(`${apiUrl}/api/books/${bookToUpdate._id}/editBook`, bookToUpdate);\n  }\n  // updateBook(name: string, author: string, image: {url: string, alt: string}, published: number, genre: string, description: string) {\n  //   const { apiUrl } = environment;    \n  //   return this.http.put<Book>(`${apiUrl}/books/${id}`, book);\n  // }\n  // create(data: any): Observable<any> {\n  //   const { apiUrl } = environment;\n  //   return this.http.post(apiUrl, data);\n  // }\n  create(name, author, image, published, genre, description) {\n    return this.http.post('/api/books/create', {\n      name,\n      author,\n      image,\n      published,\n      genre,\n      description\n    });\n  }\n  deleteBook(id) {\n    const {\n      apiUrl\n    } = environment;\n    const url = `${apiUrl}/api/books/${id}`;\n    return this.http.delete(url);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","ApiService","constructor","http","getBooks","apiUrl","get","getBook","id","updateBook","bookToUpdate","put","_id","create","name","author","image","published","genre","description","post","deleteBook","url","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Book } from './types/book';\nimport { Image } from './types/image';\nimport { User } from './types/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getBooks() {\n    const { apiUrl } = environment;\n\n\n\n    return this.http.get<Book[]>(`${apiUrl}/api/books`);\n\n  }\n\n  getBook(id: any): Observable<Book> {\n    const { apiUrl } = environment;\n\n    return this.http.get<Book>(`${apiUrl}/api/books/${id}`);\n\n  }\n\n  updateBook(bookToUpdate: Book): Observable<Book> {\n    const { apiUrl } = environment;\n    // const url = `${apiUrl}/api/books/${bookToUpdate.id}`;\n\n    return this.http.put<Book>(`${apiUrl}/api/books/${bookToUpdate._id}/editBook`, bookToUpdate);\n  }\n\n\n\n  // updateBook(name: string, author: string, image: {url: string, alt: string}, published: number, genre: string, description: string) {\n  //   const { apiUrl } = environment;    \n\n  //   return this.http.put<Book>(`${apiUrl}/books/${id}`, book);\n\n\n  // }\n\n  // create(data: any): Observable<any> {\n  //   const { apiUrl } = environment;\n  //   return this.http.post(apiUrl, data);\n  // }\n\n  create(name: string, author: string, image: Image, published: number, genre: string, description: string) {\n    return this.http.post<Book>('/api/books/create', { name, author, image, published, genre, description });\n  }\n\n  deleteBook(id: string) {\n    const { apiUrl } = environment;\n    const url = `${apiUrl}/api/books/${id}`;\n    return this.http.delete(url);\n\n  }\n\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,UAAU;EAErBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACN,MAAM;MAAEC;IAAM,CAAE,GAAGL,WAAW;IAI9B,OAAO,IAAI,CAACG,IAAI,CAACG,GAAG,CAAS,GAAGD,MAAM,YAAY,CAAC;EAErD;EAEAE,OAAOA,CAACC,EAAO;IACb,MAAM;MAAEH;IAAM,CAAE,GAAGL,WAAW;IAE9B,OAAO,IAAI,CAACG,IAAI,CAACG,GAAG,CAAO,GAAGD,MAAM,cAAcG,EAAE,EAAE,CAAC;EAEzD;EAEAC,UAAUA,CAACC,YAAkB;IAC3B,MAAM;MAAEL;IAAM,CAAE,GAAGL,WAAW;IAC9B;IAEA,OAAO,IAAI,CAACG,IAAI,CAACQ,GAAG,CAAO,GAAGN,MAAM,cAAcK,YAAY,CAACE,GAAG,WAAW,EAAEF,YAAY,CAAC;EAC9F;EAIA;EACA;EAEA;EAGA;EAEA;EACA;EACA;EACA;EAEAG,MAAMA,CAACC,IAAY,EAAEC,MAAc,EAAEC,KAAY,EAAEC,SAAiB,EAAEC,KAAa,EAAEC,WAAmB;IACtG,OAAO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAO,mBAAmB,EAAE;MAAEN,IAAI;MAAEC,MAAM;MAAEC,KAAK;MAAEC,SAAS;MAAEC,KAAK;MAAEC;IAAW,CAAE,CAAC;EAC1G;EAEAE,UAAUA,CAACb,EAAU;IACnB,MAAM;MAAEH;IAAM,CAAE,GAAGL,WAAW;IAC9B,MAAMsB,GAAG,GAAG,GAAGjB,MAAM,cAAcG,EAAE,EAAE;IACvC,OAAO,IAAI,CAACL,IAAI,CAACoB,MAAM,CAACD,GAAG,CAAC;EAE9B;;AAnDWrB,UAAU,C;mBAAVA,UAAU,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAV1B,UAAU,C;SAAVA,UAAU;EAAA2B,OAAA,EAAV3B,UAAU,CAAA4B,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}