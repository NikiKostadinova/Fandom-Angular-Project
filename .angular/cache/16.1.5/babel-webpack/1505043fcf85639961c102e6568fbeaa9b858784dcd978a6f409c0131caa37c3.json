{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  get isLogged() {\n    return !!this.user;\n  }\n  constructor(http) {\n    this.http = http;\n    this.USER_KEY = '[user]';\n    try {\n      const lsUser = localStorage.getItem(this.USER_KEY) || '';\n      this.user = JSON.parse(lsUser);\n    } catch (error) {\n      this.user = undefined;\n    }\n  }\n  login(email, password) {\n    // this.user = {\n    //   email: 'john.doe@gmail.com',\n    //   username: 'John',\n    //   password: '123456'\n    // };\n    // localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n    return this.http.post('/api/login', {\n      email,\n      password\n    });\n  }\n  register(username, email, password, rePassword) {\n    // this.user = {\n    //   email: 'john.doe@gmail.com',\n    //   username: 'John',\n    //   password: '123456'\n    // };\n    // localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n    return this.http.post('/api/register', {\n      username,\n      email,\n      password,\n      rePassword\n    });\n  }\n  logout() {\n    this.user = undefined;\n    localStorage.removeItem(this.USER_KEY);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["UserService","isLogged","user","constructor","http","USER_KEY","lsUser","localStorage","getItem","JSON","parse","error","undefined","login","email","password","post","register","username","rePassword","logout","removeItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../types/user';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  user: User | undefined;\n  USER_KEY = '[user]';\n\n  get isLogged():  boolean {\n    return !!this.user;\n  }\n\n  constructor(private http: HttpClient) {\n    try {\n      const lsUser = localStorage.getItem(this.USER_KEY) || '';\n      this.user = JSON.parse(lsUser);\n    } catch (error) {\n      this.user = undefined;\n    }\n  }\n\n  login(email: string, password: string){\n\n    // this.user = {\n    //   email: 'john.doe@gmail.com',\n    //   username: 'John',\n    //   password: '123456'\n    // };\n\n    // localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n\n    return this.http.post('/api/login', {email, password})\n\n  }\n\n  register(username: string, email: string, password: string, rePassword: string){\n\n    // this.user = {\n    //   email: 'john.doe@gmail.com',\n    //   username: 'John',\n    //   password: '123456'\n    // };\n\n    // localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n\n    return this.http.post('/api/register', {username, email, password, rePassword})\n\n  }\n\n  logout(){\n    this.user = undefined;\n    localStorage.removeItem(this.USER_KEY);\n  }\n}\n"],"mappings":";;AASA,OAAM,MAAOA,WAAW;EAItB,IAAIC,QAAQA,CAAA;IACV,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI;EACpB;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,QAAQ,GAAG,QAAQ;IAOjB,IAAI;MACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACH,QAAQ,CAAC,IAAI,EAAE;MACxD,IAAI,CAACH,IAAI,GAAGO,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;KAC/B,CAAC,OAAOK,KAAK,EAAE;MACd,IAAI,CAACT,IAAI,GAAGU,SAAS;;EAEzB;EAEAC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IAEnC;IACA;IACA;IACA;IACA;IAEA;IAEA,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,YAAY,EAAE;MAACF,KAAK;MAAEC;IAAQ,CAAC,CAAC;EAExD;EAEAE,QAAQA,CAACC,QAAgB,EAAEJ,KAAa,EAAEC,QAAgB,EAAEI,UAAkB;IAE5E;IACA;IACA;IACA;IACA;IAEA;IAEA,OAAO,IAAI,CAACf,IAAI,CAACY,IAAI,CAAC,eAAe,EAAE;MAACE,QAAQ;MAAEJ,KAAK;MAAEC,QAAQ;MAAEI;IAAU,CAAC,CAAC;EAEjF;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAAClB,IAAI,GAAGU,SAAS;IACrBL,YAAY,CAACc,UAAU,CAAC,IAAI,CAAChB,QAAQ,CAAC;EACxC;;AAhDWL,WAAW,C;mBAAXA,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXzB,WAAW,C;SAAXA,WAAW;EAAA0B,OAAA,EAAX1B,WAAW,CAAA2B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}