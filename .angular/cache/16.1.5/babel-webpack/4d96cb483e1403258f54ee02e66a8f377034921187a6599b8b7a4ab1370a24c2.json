{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { DEFAULT_EMAIL_DOMAINS } from 'src/app/shared/constants';\nimport { appEmailValidator } from 'src/app/shared/validators/app-email-validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"@angular/common\";\nfunction ProfileComponent_ng_container_6_div_12_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bookId_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(bookId_r4);\n  }\n}\nfunction ProfileComponent_ng_container_6_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h3\");\n    i0.ɵɵtext(6, \"Wish List\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ul\");\n    i0.ɵɵtemplate(8, ProfileComponent_ng_container_6_div_12_li_8_Template, 2, 1, \"li\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.user.username, \"'s Profile\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Email: \", ctx_r2.user.email, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.user.wishList);\n  }\n}\nfunction ProfileComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 4)(2, \"p\");\n    i0.ɵɵtext(3, \"Username: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 4)(7, \"p\");\n    i0.ɵɵtext(8, \"Email: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 4);\n    i0.ɵɵtemplate(12, ProfileComponent_ng_container_6_div_12_Template, 9, 3, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ProfileComponent_ng_container_6_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.toggleEditMode());\n    });\n    i0.ɵɵtext(14, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.profileDetails.username);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.profileDetails.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.user);\n  }\n}\nfunction ProfileComponent_ng_container_7_ng_container_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_ng_container_7_ng_container_6_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Username's length should not be less than 5! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_ng_container_7_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ProfileComponent_ng_container_7_ng_container_6_p_1_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(2, ProfileComponent_ng_container_7_ng_container_6_p_2_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.form.get(\"username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.form.get(\"username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction ProfileComponent_ng_container_7_ng_container_11_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_ng_container_7_ng_container_11_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" Email is not valid! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_ng_container_7_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ProfileComponent_ng_container_7_ng_container_11_p_1_Template, 2, 0, \"p\", 12);\n    i0.ɵɵtemplate(2, ProfileComponent_ng_container_7_ng_container_11_p_2_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r8.form.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r8.form.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"appEmailValidator\"]);\n  }\n}\nfunction ProfileComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_ng_container_7_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.saveProfileHandler());\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"p\");\n    i0.ɵɵtext(4, \"Username:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ProfileComponent_ng_container_7_ng_container_6_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementStart(7, \"div\", 4)(8, \"p\");\n    i0.ɵɵtext(9, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, ProfileComponent_ng_container_7_ng_container_11_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementStart(12, \"button\", 10);\n    i0.ɵɵtext(13, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 11);\n    i0.ɵɵtext(15, \"Save\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.form.get(\"username\")) == null ? null : tmp_1_0.touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r1.form.get(\"email\")) == null ? null : tmp_2_0.touched);\n  }\n}\nexport class ProfileComponent {\n  get isLoggedIn() {\n    return this.userService.isLogged;\n  }\n  constructor(fb, userService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.profileDetails = {\n      username: '',\n      email: ''\n    };\n    this.isEditMode = false;\n    this.form = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(5)]],\n      email: ['', [Validators.required, appEmailValidator(DEFAULT_EMAIL_DOMAINS)]]\n      // ToDo: render this from the template and make more fields on click of a button\n      // persons: this.fb.array([]),\n    });\n  }\n\n  ngOnInit() {\n    this.userService.user$.subscribe(user => {\n      this.user = user;\n    });\n    const {\n      username,\n      email\n    } = this.userService.user;\n    this.profileDetails = {\n      username,\n      email\n    };\n    this.form.setValue({\n      username,\n      email\n    });\n  }\n  // pagination\n  // records => 1000\n  // 10 records per page -> page: 100\n  // 10 records => 4 => offset= 4, limit = 10\n  toggleEditMode() {\n    this.isEditMode = !this.isEditMode;\n  }\n  saveProfileHandler() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.profileDetails = {\n      ...this.form.value\n    };\n    // const { username, email } = this.profileDetails;\n    const updatedUser = {\n      ...this.userService.user,\n      username: this.profileDetails.username,\n      email: this.profileDetails.email\n    };\n    // const headers = {\n    //   Authorization: `Bearer ${this.userService.getToken()}`\n    // };\n    this.userService.updateProfile(updatedUser).subscribe(() => {\n      this.toggleEditMode();\n    });\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[1, \"profile-container\", \"mt-5\"], [1, \"profile\"], [\"src\", \"./assets/profile.png\", \"alt\", \"default user\", 1, \"profile-image\"], [4, \"ngIf\"], [1, \"flex\"], [1, \"edit-button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [1, \"red-button\"], [1, \"green-button\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"fieldset\")(2, \"div\", 1);\n      i0.ɵɵelement(3, \"img\", 2);\n      i0.ɵɵelementStart(4, \"h3\");\n      i0.ɵɵtext(5, \"User Info:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, ProfileComponent_ng_container_6_Template, 15, 3, \"ng-container\", 3);\n      i0.ɵɵtemplate(7, ProfileComponent_ng_container_7_Template, 16, 3, \"ng-container\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isEditMode);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isEditMode && ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".profile-container[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%] {\\n    display: flex;\\n    margin: auto;\\n    margin-top: 300px;\\n    width: 500%;   \\n    position: relative;\\n    height: 500px;\\n    color: rgb(168, 248, 248);  \\n\\n\\n\\n    border-radius: 0.5em;\\n    background-color: rgba(0, 0, 0, 0.566);\\n    box-shadow: 0px 0px 50px -10px rgba(200, 233, 225, 0.900);\\n    text-align: center;\\n    flex-direction: column;\\n      \\n\\n      justify-content: center;\\n    \\n\\n\\n      left: 50%;\\n    transform: translate(-50%, -50%);\\n    \\n\\n\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.profile[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    text-decoration: underline;\\n}\\n\\n.profile[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    width: 7em;\\n    height: 7em;\\n    margin: auto;\\n    display: block;\\n}\\n\\n.flex[_ngcontent-%COMP%] {\\n    display: flex;\\n}\\n\\n.flex[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:first-child {\\n    width: 35%;\\n    text-align: right;\\n    margin: .5em;\\n}\\n\\n.flex[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:last-child {\\n    width: 55%;\\n    text-align: left;\\n    margin: .5em;\\n    font-weight: bold;\\n}\\n\\n.profile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    color: rgb(37, 92, 126);\\n    border: none;\\n    border-radius: 0.3em;\\n    padding: 0.6em 1.2em;\\n    outline: none;\\n}\\n\\n.flex[_ngcontent-%COMP%] > input[_ngcontent-%COMP%], .flex[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] {\\n    width: 55%;\\n    text-align: left;\\n    margin: .5em;\\n}\\n\\n.flex[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > input[_ngcontent-%COMP%] {\\n    width: 77%;\\n}\\n\\n.flex[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n    padding: 0.17em 0;\\n}\\n\\n.red-button[_ngcontent-%COMP%] {\\n    background-color: red;\\n}\\n\\n.green-button[_ngcontent-%COMP%] {\\n    background-color: green;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHlCQUF5Qjs7OztJQUl6QixvQkFBb0I7SUFDcEIsc0NBQXNDO0lBQ3RDLHlEQUF5RDtJQUN6RCxrQkFBa0I7SUFDbEIsc0JBQXNCO01BQ3BCLHlCQUF5QjtNQUN6Qix1QkFBdUI7SUFDekIsd0JBQXdCOztNQUV0QixTQUFTO0lBQ1gsZ0NBQWdDO0lBQ2hDLG1CQUFtQjs7QUFFdkI7O0FBRUE7Ozs7Ozs7O0dBUUc7Ozs7OztBQU1IOzs7Ozs7Ozs7Ozs7O0dBYUc7O0FBRUg7SUFDSSwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsV0FBVztJQUNYLFlBQVk7SUFDWixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixpQkFBaUI7SUFDakIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLG9CQUFvQjtJQUNwQixhQUFhO0FBQ2pCOztBQUVBOztJQUVJLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWNvbnRhaW5lciBmaWVsZHNldCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzAwcHg7XHJcbiAgICB3aWR0aDogNTAwJTsgICBcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICBjb2xvcjogcmdiKDE2OCwgMjQ4LCAyNDgpOyAgXHJcblxyXG5cclxuXHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjVlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NjYpO1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1MHB4IC0xMHB4IHJnYmEoMjAwLCAyMzMsIDIyNSwgMC45MDApO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgLyogYWxpZ24taXRlbXM6IGNlbnRlcjsgKi9cclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAvKiBwb3NpdGlvbjogYWJzb2x1dGU7ICovXHJcblxyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIC8qIHotaW5kZXg6IDk5OTk7ICovXHJcblxyXG59XHJcblxyXG4vKiAucHJvZmlsZS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBtYXJnaW46IDEwMHB4O1xyXG5cclxuICAgIFxyXG59ICovXHJcblxyXG5cclxuXHJcblxyXG5cclxuLyogLnByb2ZpbGUge1xyXG4gICAgd2lkdGg6IDYwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiAyZW0gYXV0byAxcmVtO1xyXG4gICBcclxuICAgIHBhZGRpbmc6IC41ZW07XHJcbiAgICBib3JkZXI6IC4zZW0gc29saWQgcmdiKDAsIDIxMiwgMjU1KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IC41cmVtO1xyXG4gICAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiAjNDQ0O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaHNsYSgwLCAwJSwgOTQuMSUsIC44KTtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxZW0gMCAjMDAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59ICovXHJcblxyXG4ucHJvZmlsZSBoMyB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG5cclxuLnByb2ZpbGUgaW1nIHtcclxuICAgIHdpZHRoOiA3ZW07XHJcbiAgICBoZWlnaHQ6IDdlbTtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4uZmxleCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uZmxleCBwOmZpcnN0LWNoaWxkIHtcclxuICAgIHdpZHRoOiAzNSU7XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgIG1hcmdpbjogLjVlbTtcclxufVxyXG5cclxuLmZsZXggcDpsYXN0LWNoaWxkIHtcclxuICAgIHdpZHRoOiA1NSU7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgbWFyZ2luOiAuNWVtO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5wcm9maWxlIGJ1dHRvbiB7XHJcbiAgICBjb2xvcjogcmdiKDM3LCA5MiwgMTI2KTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuM2VtO1xyXG4gICAgcGFkZGluZzogMC42ZW0gMS4yZW07XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG4uZmxleD5pbnB1dCxcclxuLmZsZXg+ZGl2IHtcclxuICAgIHdpZHRoOiA1NSU7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgbWFyZ2luOiAuNWVtO1xyXG59XHJcblxyXG4uZmxleD5kaXY+aW5wdXQge1xyXG4gICAgd2lkdGg6IDc3JTtcclxufVxyXG5cclxuLmZsZXggc2VsZWN0IHtcclxuICAgIHBhZGRpbmc6IDAuMTdlbSAwO1xyXG59XHJcblxyXG4ucmVkLWJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi5ncmVlbi1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["Validators","DEFAULT_EMAIL_DOMAINS","appEmailValidator","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","bookId_r4","ɵɵtemplate","ProfileComponent_ng_container_6_div_12_li_8_Template","ɵɵtextInterpolate1","ctx_r2","user","username","email","ɵɵproperty","wishList","ɵɵelementContainerStart","ProfileComponent_ng_container_6_div_12_Template","ɵɵlistener","ProfileComponent_ng_container_6_Template_button_click_13_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","toggleEditMode","ɵɵelementContainerEnd","ctx_r0","profileDetails","ProfileComponent_ng_container_7_ng_container_6_p_1_Template","ProfileComponent_ng_container_7_ng_container_6_p_2_Template","tmp_0_0","ctx_r7","form","get","errors","tmp_1_0","ProfileComponent_ng_container_7_ng_container_11_p_1_Template","ProfileComponent_ng_container_7_ng_container_11_p_2_Template","ctx_r8","ProfileComponent_ng_container_7_Template_form_ngSubmit_1_listener","_r14","ctx_r13","saveProfileHandler","ɵɵelement","ProfileComponent_ng_container_7_ng_container_6_Template","ProfileComponent_ng_container_7_ng_container_11_Template","ctx_r1","touched","tmp_2_0","ProfileComponent","isLoggedIn","userService","isLogged","constructor","fb","isEditMode","group","required","minLength","ngOnInit","user$","subscribe","setValue","invalid","value","updatedUser","updateProfile","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ProfileComponent_ng_container_6_Template","ProfileComponent_ng_container_7_Template"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\user\\profile\\profile.component.ts","D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\user\\profile\\profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { DEFAULT_EMAIL_DOMAINS } from 'src/app/shared/constants';\nimport { appEmailValidator } from 'src/app/shared/validators/app-email-validator';\nimport { UserService } from '../user.service';\nimport { User } from 'src/app/types/user';\n\ninterface Profile {\n  username: string;\n  email: string;\n\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: User | undefined;\n  profileDetails: Profile = {\n    username: '',\n    email: '',\n   \n  };\n\n  get isLoggedIn (): boolean {\n    return this.userService.isLogged\n  }\n  \n  isEditMode: boolean = false;\n\n  form = this.fb.group({\n    username: ['', [Validators.required, Validators.minLength(5)]],\n    email: [\n      '',\n      [Validators.required, appEmailValidator(DEFAULT_EMAIL_DOMAINS)],\n    ],\n    \n    // ToDo: render this from the template and make more fields on click of a button\n    // persons: this.fb.array([]),\n  });\n\n  constructor(private fb: FormBuilder, private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.user$.subscribe((user) => {\n      this.user = user;\n    });\n    const { username, email } = this.userService.user!;\n    this.profileDetails = {\n      username,\n      email,\n      \n    };\n\n    this.form.setValue({\n      username,\n      email,\n      \n    });\n  }\n  // pagination\n  // records => 1000\n  // 10 records per page -> page: 100\n  // 10 records => 4 => offset= 4, limit = 10\n\n  toggleEditMode(): void {\n    this.isEditMode = !this.isEditMode;\n  }\n\n  saveProfileHandler(): void {\n    if (this.form.invalid) {      \n      return;\n    }\n\n    this.profileDetails = { ...this.form.value } as Profile;\n    // const { username, email } = this.profileDetails;\n\n    const updatedUser: User = {\n      ...this.userService.user!,\n      username: this.profileDetails.username,\n      email: this.profileDetails.email,\n    };\n\n    // const headers = {\n    //   Authorization: `Bearer ${this.userService.getToken()}`\n    // };\n   \n    \n    this.userService.updateProfile(updatedUser).subscribe(() => {\n      this.toggleEditMode();\n    });\n  }\n}\n\n\n","<div class=\"profile-container mt-5 \">\n    <fieldset>\n    <div class=\"profile\"><img src=\"./assets/profile.png\" alt=\"default user\" class=\"profile-image\">\n        <h3>User Info:</h3>\n        <ng-container *ngIf=\"!isEditMode\">\n        <div class=\"flex\">\n            <p>Username: </p>\n            <p>{{profileDetails.username}}</p>\n        </div>\n        <div class=\"flex\">\n            <p>Email: </p>\n            <p>{{profileDetails.email}}</p>\n        </div>\n        <div class=\"flex\">\n            <div *ngIf=\"user\">\n              <h2>{{ user.username }}'s Profile</h2>\n              <p>Email: {{ user.email }}</p>\n              <h3>Wish List</h3>\n              <ul>\n                <li *ngFor=\"let bookId of user.wishList\">{{ bookId }}</li>\n              </ul>\n            </div>\n            \n        </div>\n        <button class=\"edit-button\" (click)=\"toggleEditMode()\">Edit</button>\n    </ng-container>\n\n     <!-- EDIT MODE -->\n     <ng-container *ngIf=\"isEditMode && isLoggedIn\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveProfileHandler()\">\n          <!-- username input -->\n          <div class=\"flex\">\n            <p>Username:</p>\n            <input type=\"text\" id=\"username\" formControlName=\"username\" />\n          </div>\n  \n          <!-- username validations -->\n          <ng-container *ngIf=\"form.get('username')?.touched\">\n            <p class=\"error\" *ngIf=\"form.get('username')?.errors?.['required']\">\n              Username is required!\n            </p>\n            <p class=\"error\" *ngIf=\"form.get('username')?.errors?.['minlength']\">\n              Username's length should not be less than 5!\n            </p>\n          </ng-container>\n  \n          <!-- email input -->\n          <div class=\"flex\">\n            <p>Email:</p>\n            <input type=\"email\" id=\"email\" formControlName=\"email\" />\n          </div>\n  \n          <!-- email validations -->\n          <ng-container *ngIf=\"form.get('email')?.touched\">\n            <p class=\"error\" *ngIf=\"form.get('email')?.errors?.['required']\">\n              Email is required!\n            </p>\n            <p\n              class=\"error\"\n              *ngIf=\"form.get('email')?.errors?.['appEmailValidator']\"\n            >\n              Email is not valid!\n            </p>\n          </ng-container>\n           \n  \n          <!-- ACTIONS -->\n          <button class=\"red-button\">Cancel</button>\n          <button class=\"green-button\">Save</button>\n        </form>\n      </ng-container>\n    </div>\n</fieldset>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}