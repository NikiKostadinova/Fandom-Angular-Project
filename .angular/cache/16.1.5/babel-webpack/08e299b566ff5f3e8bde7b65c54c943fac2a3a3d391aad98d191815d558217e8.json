{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nexport class AppInterceptor {\n  intercept(req, next) {\n    return null;\n  }\n}\nAppInterceptor.ɵfac = function AppInterceptor_Factory(t) {\n  return new (t || AppInterceptor)();\n};\nAppInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppInterceptor,\n  factory: AppInterceptor.ɵfac\n});\nexport const appInterceptorProvider = {\n  multi: true,\n  useClass: AppInterceptor,\n  provide: HTTP_INTERCEPTORS\n};","map":{"version":3,"names":["HTTP_INTERCEPTORS","AppInterceptor","intercept","req","next","factory","ɵfac","appInterceptorProvider","multi","useClass","provide"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\app.interceptor.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, Provider } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AppInterceptor implements HttpInterceptor{\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const appInterceptorProvider: Provider = {\r\n    multi: true,\r\n    useClass: AppInterceptor,\r\n    provide: HTTP_INTERCEPTORS\r\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAA8D,sBAAsB;;AAK9G,OAAM,MAAOC,cAAc;EAEvBC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,OAAO,IAAI;EACf;;AAJSH,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAI,OAAA,EAAdJ,cAAc,CAAAK;AAAA;AAO3B,OAAO,MAAMC,sBAAsB,GAAa;EAC5CC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAER,cAAc;EACxBS,OAAO,EAAEV;CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}