{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/user/user.service\";\nexport class AuthActivate {\n  constructor(userService) {\n    this.userService = userService;\n  }\n  canActivate(route, state) {\n    return this.userService.isLogged;\n  }\n}\nAuthActivate.ɵfac = function AuthActivate_Factory(t) {\n  return new (t || AuthActivate)(i0.ɵɵinject(i1.UserService));\n};\nAuthActivate.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthActivate,\n  factory: AuthActivate.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthActivate","constructor","userService","canActivate","route","state","isLogged","i0","ɵɵinject","i1","UserService","factory","ɵfac","providedIn"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\core\\guards\\auth.activate.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UserService } from \"src/app/user/user.service\";\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\n\r\nexport class AuthActivate implements CanActivate {\r\n\r\n\r\n    constructor(private userService: UserService) {\r\n       \r\n    }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n       \r\n        return this.userService.isLogged;\r\n    }\r\n}"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGrBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAE/B;EACAC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IAEjE,OAAO,IAAI,CAACH,WAAW,CAACI,QAAQ;EACpC;;AATSN,YAAY,C;mBAAZA,YAAY,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAZV,YAAY,C;SAAZA,YAAY;EAAAW,OAAA,EAAZX,YAAY,CAAAY,IAAA;EAAAC,UAAA,EAFA;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}