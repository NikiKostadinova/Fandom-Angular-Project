{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { DEFAULT_EMAIL_DOMAINS } from 'src/app/shared/constants';\nimport { appEmailValidator } from 'src/app/shared/validators/app-email-validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../user.service\";\nimport * as i3 from \"src/app/api.service\";\nimport * as i4 from \"@angular/common\";\nfunction ProfileComponent_ng_container_4_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"div\");\n    i0.ɵɵelement(2, \"img\", 9);\n    i0.ɵɵelementStart(3, \"h4\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const book_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", book_r3.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(book_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Author: \", book_r3.author, \"\");\n  }\n}\nfunction ProfileComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 4)(2, \"p\");\n    i0.ɵɵtext(3, \"Username: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 5)(7, \"p\");\n    i0.ɵɵtext(8, \"Email: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 6)(12, \"h3\");\n    i0.ɵɵtext(13, \"Wish List\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ul\");\n    i0.ɵɵtemplate(15, ProfileComponent_ng_container_4_li_15_Template, 7, 3, \"li\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ProfileComponent_ng_container_4_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleEditMode());\n    });\n    i0.ɵɵtext(17, \"Update User Info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.profileDetails.username);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.profileDetails.email);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.wishListBooks);\n  }\n}\nfunction ProfileComponent_ng_container_5_ng_container_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_ng_container_5_ng_container_6_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1, \" Username's length should not be less than 5! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_ng_container_5_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ProfileComponent_ng_container_5_ng_container_6_p_1_Template, 2, 0, \"p\", 16);\n    i0.ɵɵtemplate(2, ProfileComponent_ng_container_5_ng_container_6_p_2_Template, 2, 0, \"p\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.form.get(\"username\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r6.form.get(\"username\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction ProfileComponent_ng_container_5_ng_container_11_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1, \" Email is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_ng_container_5_ng_container_11_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1, \" Email is not valid! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfileComponent_ng_container_5_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ProfileComponent_ng_container_5_ng_container_11_p_1_Template, 2, 0, \"p\", 16);\n    i0.ɵɵtemplate(2, ProfileComponent_ng_container_5_ng_container_11_p_2_Template, 2, 0, \"p\", 16);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.form.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.form.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"appEmailValidator\"]);\n  }\n}\nfunction ProfileComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_ng_container_5_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.saveProfileHandler());\n    });\n    i0.ɵɵelementStart(2, \"div\", 11)(3, \"p\");\n    i0.ɵɵtext(4, \"Username:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ProfileComponent_ng_container_5_ng_container_6_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementStart(7, \"div\", 11)(8, \"p\");\n    i0.ɵɵtext(9, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, ProfileComponent_ng_container_5_ng_container_11_Template, 3, 2, \"ng-container\", 3);\n    i0.ɵɵelementStart(12, \"button\", 14);\n    i0.ɵɵtext(13, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 15);\n    i0.ɵɵtext(15, \"Save\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.form.get(\"username\")) == null ? null : tmp_1_0.touched);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r1.form.get(\"email\")) == null ? null : tmp_2_0.touched);\n  }\n}\nexport class ProfileComponent {\n  get isLoggedIn() {\n    return this.userService.isLogged;\n  }\n  constructor(fb, userService, apiService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.apiService = apiService;\n    this.wishListBooks = [];\n    this.profileDetails = {\n      username: '',\n      email: ''\n    };\n    this.isEditMode = false;\n    this.form = this.fb.group({\n      username: ['', [Validators.required, Validators.minLength(5)]],\n      email: ['', [Validators.required, appEmailValidator(DEFAULT_EMAIL_DOMAINS)]]\n      // ToDo: render this from the template and make more fields on click of a button\n      // persons: this.fb.array([]),\n    });\n  }\n\n  ngOnInit() {\n    this.userService.user$.subscribe(user => {\n      this.user = user;\n      if (user) {\n        this.fetchWishListBooks();\n      }\n    });\n    const {\n      username,\n      email\n    } = this.userService.user;\n    this.profileDetails = {\n      username,\n      email\n    };\n    this.form.setValue({\n      username,\n      email\n    });\n  }\n  fetchWishListBooks() {\n    if (this.user?.wishList) {\n      this.apiService.getBooks().subscribe(books => {\n        this.wishListBooks = books.filter(book => this.user?.wishList.includes(book._id));\n      });\n    }\n  }\n  toggleEditMode() {\n    this.isEditMode = !this.isEditMode;\n  }\n  saveProfileHandler() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.profileDetails = {\n      ...this.form.value\n    };\n    // const { username, email } = this.profileDetails;\n    const updatedUser = {\n      ...this.userService.user,\n      username: this.profileDetails.username,\n      email: this.profileDetails.email\n    };\n    // const headers = {\n    //   Authorization: `Bearer ${this.userService.getToken()}`\n    // };\n    this.userService.updateProfile(updatedUser).subscribe(() => {\n      this.toggleEditMode();\n    });\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.ApiService));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"profile-container\", \"mt-5\"], [1, \"profile\"], [\"src\", \"./assets/profile.png\", \"alt\", \"default user\", 1, \"profile-image\"], [4, \"ngIf\"], [1, \"user-name\", \"flex\"], [1, \"email\", \"flex\"], [1, \"wish\"], [4, \"ngFor\", \"ngForOf\"], [1, \"edit-button\", 3, \"click\"], [\"width\", \"50\", \"height\", \"50\", 3, \"src\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"flex\"], [\"type\", \"text\", \"id\", \"username\", \"formControlName\", \"username\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [1, \"red-button\"], [1, \"green-button\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"error\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"fieldset\")(2, \"div\", 1);\n      i0.ɵɵelement(3, \"img\", 2);\n      i0.ɵɵtemplate(4, ProfileComponent_ng_container_4_Template, 18, 3, \"ng-container\", 3);\n      i0.ɵɵtemplate(5, ProfileComponent_ng_container_5_Template, 16, 3, \"ng-container\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isEditMode);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isEditMode && ctx.isLoggedIn);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".profile-container[_ngcontent-%COMP%]   fieldset[_ngcontent-%COMP%] {\\n    display: flex;\\n    margin: auto;\\n    margin-top: 300px;\\n    width: 300%;   \\n    position: relative;\\n    height: 500px;\\n    color: rgb(168, 248, 248);  \\n\\n\\n\\n    border-radius: 0.5em;\\n    background-color: rgba(0, 0, 0, 0.566);\\n    box-shadow: 0px 0px 50px -10px rgba(200, 233, 225, 0.900);\\n    text-align: center;\\n    flex-direction: column;\\n      \\n\\n      justify-content: center;\\n    \\n\\n\\n      left: 50%;\\n    transform: translate(-50%, -50%);\\n    \\n\\n\\n}\\n\\n.wish[_ngcontent-%COMP%]{\\n    display: block;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.profile[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    text-decoration: underline;\\n}\\n\\n.profile[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n    margin-left: 30px;\\n    width: 7em;\\n    height: 7em;\\n    margin: start;\\n    display: block;\\n}\\n\\n.user-name[_ngcontent-%COMP%]{\\n  display: block;\\n  margin: start;\\n  margin-left: 30px;\\n \\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.profile[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n    color: rgb(37, 92, 126);\\n    border: none;\\n    border-radius: 0.3em;\\n    padding: 0.6em 1.2em;\\n    outline: none;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.red-button[_ngcontent-%COMP%] {\\n    background-color: red;\\n}\\n\\n.green-button[_ngcontent-%COMP%] {\\n    background-color: green;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLHlCQUF5Qjs7OztJQUl6QixvQkFBb0I7SUFDcEIsc0NBQXNDO0lBQ3RDLHlEQUF5RDtJQUN6RCxrQkFBa0I7SUFDbEIsc0JBQXNCO01BQ3BCLHlCQUF5QjtNQUN6Qix1QkFBdUI7SUFDekIsd0JBQXdCOztNQUV0QixTQUFTO0lBQ1gsZ0NBQWdDO0lBQ2hDLG1CQUFtQjs7QUFFdkI7O0FBRUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBOzs7Ozs7OztHQVFHOzs7Ozs7QUFNSDs7Ozs7Ozs7Ozs7OztHQWFHOztBQUVIO0lBQ0ksMEJBQTBCO0FBQzlCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLFVBQVU7SUFDVixXQUFXO0lBQ1gsYUFBYTtJQUNiLGNBQWM7QUFDbEI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsYUFBYTtFQUNiLGlCQUFpQjs7QUFFbkI7O0FBRUE7O0dBRUc7O0FBRUg7Ozs7R0FJRzs7QUFFSDs7Ozs7R0FLRzs7QUFFSDtJQUNJLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osb0JBQW9CO0lBQ3BCLG9CQUFvQjtJQUNwQixhQUFhO0FBQ2pCOztBQUVBOzs7OztHQUtHOztBQUVIOzs7Ozs7R0FNRzs7QUFFSDtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLWNvbnRhaW5lciBmaWVsZHNldCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMzAwcHg7XHJcbiAgICB3aWR0aDogMzAwJTsgICBcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICBjb2xvcjogcmdiKDE2OCwgMjQ4LCAyNDgpOyAgXHJcblxyXG5cclxuXHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjVlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC41NjYpO1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCA1MHB4IC0xMHB4IHJnYmEoMjAwLCAyMzMsIDIyNSwgMC45MDApO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgLyogYWxpZ24taXRlbXM6IGNlbnRlcjsgKi9cclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAvKiBwb3NpdGlvbjogYWJzb2x1dGU7ICovXHJcblxyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgIC8qIHotaW5kZXg6IDk5OTk7ICovXHJcblxyXG59XHJcblxyXG4ud2lzaHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKiAucHJvZmlsZS1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBtYXJnaW46IDEwMHB4O1xyXG5cclxuICAgIFxyXG59ICovXHJcblxyXG5cclxuXHJcblxyXG5cclxuLyogLnByb2ZpbGUge1xyXG4gICAgd2lkdGg6IDYwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luOiAyZW0gYXV0byAxcmVtO1xyXG4gICBcclxuICAgIHBhZGRpbmc6IC41ZW07XHJcbiAgICBib3JkZXI6IC4zZW0gc29saWQgcmdiKDAsIDIxMiwgMjU1KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IC41cmVtO1xyXG4gICAgZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICAgIGNvbG9yOiAjNDQ0O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaHNsYSgwLCAwJSwgOTQuMSUsIC44KTtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxZW0gMCAjMDAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59ICovXHJcblxyXG4ucHJvZmlsZSBoMyB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxufVxyXG5cclxuLnByb2ZpbGUgaW1nIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xyXG4gICAgd2lkdGg6IDdlbTtcclxuICAgIGhlaWdodDogN2VtO1xyXG4gICAgbWFyZ2luOiBzdGFydDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4udXNlci1uYW1le1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbjogc3RhcnQ7XHJcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XHJcbiBcclxufVxyXG5cclxuLyogLmZsZXgge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxufSAqL1xyXG5cclxuLyogLmZsZXggcDpmaXJzdC1jaGlsZCB7XHJcbiAgICB3aWR0aDogMzUlO1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICBtYXJnaW46IC41ZW07XHJcbn0gKi9cclxuXHJcbi8qIC5mbGV4IHA6bGFzdC1jaGlsZCB7XHJcbiAgICB3aWR0aDogNTUlO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbjogLjVlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59ICovXHJcblxyXG4ucHJvZmlsZSBidXR0b24ge1xyXG4gICAgY29sb3I6IHJnYigzNywgOTIsIDEyNik7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjNlbTtcclxuICAgIHBhZGRpbmc6IDAuNmVtIDEuMmVtO1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG5cclxuLyogLmZsZXg+aW5wdXQsXHJcbi5mbGV4PmRpdiB7XHJcbiAgICB3aWR0aDogNTUlO1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1hcmdpbjogLjVlbTtcclxufSAqL1xyXG5cclxuLyogLmZsZXg+ZGl2PmlucHV0IHtcclxuICAgIHdpZHRoOiA3NyU7XHJcbn1cclxuXHJcbi5mbGV4IHNlbGVjdCB7XHJcbiAgICBwYWRkaW5nOiAwLjE3ZW0gMDtcclxufSAqL1xyXG5cclxuLnJlZC1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG59XHJcblxyXG4uZ3JlZW4tYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","DEFAULT_EMAIL_DOMAINS","appEmailValidator","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate","book_r3","image","ɵɵsanitizeUrl","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","author","ɵɵelementContainerStart","ɵɵtemplate","ProfileComponent_ng_container_4_li_15_Template","ɵɵlistener","ProfileComponent_ng_container_4_Template_button_click_16_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","toggleEditMode","ɵɵelementContainerEnd","ctx_r0","profileDetails","username","email","ɵɵproperty","wishListBooks","ProfileComponent_ng_container_5_ng_container_6_p_1_Template","ProfileComponent_ng_container_5_ng_container_6_p_2_Template","tmp_0_0","ctx_r6","form","get","errors","tmp_1_0","ProfileComponent_ng_container_5_ng_container_11_p_1_Template","ProfileComponent_ng_container_5_ng_container_11_p_2_Template","ctx_r7","ProfileComponent_ng_container_5_Template_form_ngSubmit_1_listener","_r13","ctx_r12","saveProfileHandler","ProfileComponent_ng_container_5_ng_container_6_Template","ProfileComponent_ng_container_5_ng_container_11_Template","ctx_r1","touched","tmp_2_0","ProfileComponent","isLoggedIn","userService","isLogged","constructor","fb","apiService","isEditMode","group","required","minLength","ngOnInit","user$","subscribe","user","fetchWishListBooks","setValue","wishList","getBooks","books","filter","book","includes","_id","invalid","value","updatedUser","updateProfile","ɵɵdirectiveInject","i1","FormBuilder","i2","UserService","i3","ApiService","selectors","decls","vars","consts","template","ProfileComponent_Template","rf","ctx","ProfileComponent_ng_container_4_Template","ProfileComponent_ng_container_5_Template"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\user\\profile\\profile.component.ts","D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\user\\profile\\profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { DEFAULT_EMAIL_DOMAINS } from 'src/app/shared/constants';\nimport { appEmailValidator } from 'src/app/shared/validators/app-email-validator';\nimport { UserService } from '../user.service';\nimport { User } from 'src/app/types/user';\nimport { Book } from 'src/app/types/book';\nimport { ApiService } from 'src/app/api.service';\n\ninterface Profile {\n  username: string;\n  email: string;\n\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: User | undefined;\n  wishListBooks: Book[] = [];\n  profileDetails: Profile = {\n    username: '',\n    email: '',\n   \n  };\n\n  get isLoggedIn (): boolean {\n    return this.userService.isLogged\n  }\n  \n  isEditMode: boolean = false;\n\n  form = this.fb.group({\n    username: ['', [Validators.required, Validators.minLength(5)]],\n    email: [\n      '',\n      [Validators.required, appEmailValidator(DEFAULT_EMAIL_DOMAINS)],\n    ],\n    \n    // ToDo: render this from the template and make more fields on click of a button\n    // persons: this.fb.array([]),\n  });\n\n  constructor(private fb: FormBuilder, private userService: UserService, private apiService: ApiService) { }\n\n  ngOnInit(): void {\n    this.userService.user$.subscribe((user) => {\n      this.user = user;\n      if (user) {\n        this.fetchWishListBooks();\n      }\n    });\n    const { username, email } = this.userService.user!;\n    this.profileDetails = {\n      username,\n      email,\n      \n    };\n\n    this.form.setValue({\n      username,\n      email,\n      \n    });\n  }\n  \n\n  fetchWishListBooks(): void {\n    if (this.user?.wishList) {\n      this.apiService.getBooks().subscribe((books) => {\n        this.wishListBooks = books.filter(book => this.user?.wishList.includes(book._id));\n      });\n    }\n  }\n\n  toggleEditMode(): void {\n    this.isEditMode = !this.isEditMode;\n  }\n\n  saveProfileHandler(): void {\n    if (this.form.invalid) {      \n      return;\n    }\n\n    this.profileDetails = { ...this.form.value } as Profile;\n    // const { username, email } = this.profileDetails;\n\n    const updatedUser: User = {\n      ...this.userService.user!,\n      username: this.profileDetails.username,\n      email: this.profileDetails.email,\n    };\n\n    // const headers = {\n    //   Authorization: `Bearer ${this.userService.getToken()}`\n    // };\n   \n    \n    this.userService.updateProfile(updatedUser).subscribe(() => {\n      this.toggleEditMode();\n    });\n  }\n}\n\n\n","<div class=\"profile-container mt-5 \">\n    <fieldset>\n    <div class=\"profile\"><img src=\"./assets/profile.png\" alt=\"default user\" class=\"profile-image\">\n       \n        <ng-container *ngIf=\"!isEditMode\">\n        <div class=\"user-name flex\">\n            <p>Username: </p>\n            <p>{{profileDetails.username}}</p>\n        </div>\n        <div class=\"email flex\">\n            <p>Email: </p>\n            <p>{{profileDetails.email}}</p>\n        </div>\n        <div class=\"wish\">           \n             <h3>Wish List</h3>\n              <ul>\n                <li *ngFor=\"let book of wishListBooks\">\n                  <div>\n                    <img src=\"{{book.image}}\" width=\"50\" height=\"50\">\n                    <h4>{{ book.name }}</h4>\n                    <p>Author: {{ book.author }}</p>\n                    <!-- Display other book properties as needed -->\n                  </div>\n                </li>\n              </ul>\n            \n            \n        </div>\n        <button class=\"edit-button\" (click)=\"toggleEditMode()\">Update User Info</button>\n    </ng-container>\n\n     <!-- EDIT MODE -->\n     <ng-container *ngIf=\"isEditMode && isLoggedIn\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"saveProfileHandler()\">\n          <!-- username input -->\n          <div class=\"flex\">\n            <p>Username:</p>\n            <input type=\"text\" id=\"username\" formControlName=\"username\" />\n          </div>\n  \n          <!-- username validations -->\n          <ng-container *ngIf=\"form.get('username')?.touched\">\n            <p class=\"error\" *ngIf=\"form.get('username')?.errors?.['required']\">\n              Username is required!\n            </p>\n            <p class=\"error\" *ngIf=\"form.get('username')?.errors?.['minlength']\">\n              Username's length should not be less than 5!\n            </p>\n          </ng-container>\n  \n          <!-- email input -->\n          <div class=\"flex\">\n            <p>Email:</p>\n            <input type=\"email\" id=\"email\" formControlName=\"email\" />\n          </div>\n  \n          <!-- email validations -->\n          <ng-container *ngIf=\"form.get('email')?.touched\">\n            <p class=\"error\" *ngIf=\"form.get('email')?.errors?.['required']\">\n              Email is required!\n            </p>\n            <p\n              class=\"error\"\n              *ngIf=\"form.get('email')?.errors?.['appEmailValidator']\"\n            >\n              Email is not valid!\n            </p>\n          </ng-container>\n           \n  \n          <!-- ACTIONS -->\n          <button class=\"red-button\">Cancel</button>\n          <button class=\"green-button\">Save</button>\n        </form>\n      </ng-container>\n    </div>\n</fieldset>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}