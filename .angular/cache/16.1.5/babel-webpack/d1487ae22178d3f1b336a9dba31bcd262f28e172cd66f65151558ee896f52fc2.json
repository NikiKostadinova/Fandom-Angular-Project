{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  getBooks() {\n    const {\n      apiUrl\n    } = environment;\n    // console.log(this.http.get<Book[]>(`${apiUrl}/api/books`))\n    // return this.http.get<Book[]>(`${apiUrl}/api/books`);\n    this.http.get('http://localhost:5000/api/books', {\n      headers: {\n        skipInterceptor: 'true'\n      }\n    }).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n  getBook(id) {\n    const {\n      apiUrl\n    } = environment;\n    console;\n    return this.http.get(`${apiUrl}/${id}`);\n  }\n  // create(data: any): Observable<any> {\n  //   const { apiUrl } = environment;\n  //   return this.http.post(apiUrl, data);\n  // }\n  create(name, author, image, published, genre, description) {\n    return this.http.post('/api/books/create', {\n      name,\n      author,\n      image,\n      published,\n      genre,\n      description\n    });\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","ApiService","constructor","http","getBooks","apiUrl","get","headers","skipInterceptor","subscribe","response","console","log","error","getBook","id","create","name","author","image","published","genre","description","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Book } from './types/book';\nimport { Image } from './types/image';\nimport { User } from './types/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getBooks () {\n    const { apiUrl } = environment;    \n\n    // console.log(this.http.get<Book[]>(`${apiUrl}/api/books`))\n  \n    // return this.http.get<Book[]>(`${apiUrl}/api/books`);\n\n    this.http.get<Book[]>('http://localhost:5000/api/books', {headers: { skipInterceptor: 'true'}}).subscribe (\n      (response) => {\n         console.log(response)\n      },\n      (error) => {\n        console.log(error)\n\n      }\n    )\n  }\n\n  getBook(id: any): Observable<Book> {\n    const { apiUrl } = environment;\n    console\n    return this.http.get<Book>(`${apiUrl}/${id}`);\n  }\n\n  // create(data: any): Observable<any> {\n  //   const { apiUrl } = environment;\n  //   return this.http.post(apiUrl, data);\n  // }\n\n  create(name: string, author: string, image: Image, published: number, genre: string, description: string) {\n    return this.http.post<Book>('/api/books/create', { name, author, image, published, genre, description });\n  }\n\n}\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,UAAU;EAErBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACN,MAAM;MAAEC;IAAM,CAAE,GAAGL,WAAW;IAE9B;IAEA;IAEA,IAAI,CAACG,IAAI,CAACG,GAAG,CAAS,iCAAiC,EAAE;MAACC,OAAO,EAAE;QAAEC,eAAe,EAAE;MAAM;IAAC,CAAC,CAAC,CAACC,SAAS,CACtGC,QAAQ,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACxB,CAAC,EACAG,KAAK,IAAI;MACRF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAEpB,CAAC,CACF;EACH;EAEAC,OAAOA,CAACC,EAAO;IACb,MAAM;MAAEV;IAAM,CAAE,GAAGL,WAAW;IAC9BW,OAAO;IACP,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAO,GAAGD,MAAM,IAAIU,EAAE,EAAE,CAAC;EAC/C;EAEA;EACA;EACA;EACA;EAEAC,MAAMA,CAACC,IAAY,EAAEC,MAAc,EAAEC,KAAY,EAAEC,SAAiB,EAAEC,KAAa,EAAEC,WAAmB;IACtG,OAAO,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAAO,mBAAmB,EAAE;MAAEN,IAAI;MAAEC,MAAM;MAAEC,KAAK;MAAEC,SAAS;MAAEC,KAAK;MAAEC;IAAW,CAAE,CAAC;EAC1G;;AAnCWrB,UAAU,C;mBAAVA,UAAU,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAV1B,UAAU,C;SAAVA,UAAU;EAAA2B,OAAA,EAAV3B,UAAU,CAAA4B,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}