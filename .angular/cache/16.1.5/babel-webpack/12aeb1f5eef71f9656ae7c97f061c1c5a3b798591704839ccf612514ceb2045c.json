{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nconst {\n  apiUrl\n} = environment;\nexport class AppInterceptor {\n  intercept(req, next) {\n    if (req.url.startsWith('')) {\n      console.log(req.url);\n      req = req.clone({\n        url: req.url.replace('', apiUrl),\n        withCredentials: true\n      });\n      console.log(req.url);\n    }\n    return next.handle(req);\n  }\n}\nAppInterceptor.ɵfac = function AppInterceptor_Factory(t) {\n  return new (t || AppInterceptor)();\n};\nAppInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppInterceptor,\n  factory: AppInterceptor.ɵfac\n});\nexport const appInterceptorProvider = {\n  multi: true,\n  useClass: AppInterceptor,\n  provide: HTTP_INTERCEPTORS\n};","map":{"version":3,"names":["HTTP_INTERCEPTORS","environment","apiUrl","AppInterceptor","intercept","req","next","url","startsWith","console","log","clone","replace","withCredentials","handle","factory","ɵfac","appInterceptorProvider","multi","useClass","provide"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\app.interceptor.ts"],"sourcesContent":["import { HTTP_INTERCEPTORS, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable, Provider } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nconst {apiUrl} = environment;\r\n\r\n@Injectable()\r\nexport class AppInterceptor implements HttpInterceptor{\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n       if(req.url.startsWith('')) {\r\n        console.log(req.url)\r\n        req = req.clone({\r\n            url: req.url.replace('', apiUrl),\r\n            withCredentials: true,\r\n            \r\n        })\r\n\r\n        console.log(req.url)\r\n\r\n       \r\n       }\r\n\r\n       return next.handle(req);\r\n    }\r\n}\r\n\r\nexport const appInterceptorProvider: Provider = {\r\n    multi: true,\r\n    useClass: AppInterceptor,\r\n    provide: HTTP_INTERCEPTORS\r\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAA8D,sBAAsB;AAG9G,SAASC,WAAW,QAAQ,8BAA8B;;AAE1D,MAAM;EAACC;AAAM,CAAC,GAAGD,WAAW;AAG5B,OAAM,MAAOE,cAAc;EAEvBC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAC/C,IAAGD,GAAG,CAACE,GAAG,CAACC,UAAU,CAAC,EAAE,CAAC,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACE,GAAG,CAAC;MACpBF,GAAG,GAAGA,GAAG,CAACM,KAAK,CAAC;QACZJ,GAAG,EAAEF,GAAG,CAACE,GAAG,CAACK,OAAO,CAAC,EAAE,EAAEV,MAAM,CAAC;QAChCW,eAAe,EAAE;OAEpB,CAAC;MAEFJ,OAAO,CAACC,GAAG,CAACL,GAAG,CAACE,GAAG,CAAC;;IAKrB,OAAOD,IAAI,CAACQ,MAAM,CAACT,GAAG,CAAC;EAC1B;;AAjBSF,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAY,OAAA,EAAdZ,cAAc,CAAAa;AAAA;AAoB3B,OAAO,MAAMC,sBAAsB,GAAa;EAC5CC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAEhB,cAAc;EACxBiB,OAAO,EAAEpB;CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}