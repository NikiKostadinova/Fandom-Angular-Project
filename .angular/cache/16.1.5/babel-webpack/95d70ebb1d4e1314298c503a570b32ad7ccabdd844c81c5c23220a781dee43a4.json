{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\n// import { Image } from 'src/app/types/image'\nexport class AddBookComponent {\n  constructor(apiService, router) {\n    this.apiService = apiService;\n    this.router = router;\n  }\n  addBookSubmitHandler(form) {\n    if (form.invalid) {\n      console.log(`Invalid Form ${form}`);\n      return;\n    }\n    const {\n      name,\n      author,\n      image,\n      published,\n      genre,\n      description\n    } = form.value;\n    this.apiService.create(name, author, image, published, genre, description).subscribe(() => {\n      console.log(name, author, image, published, genre, description);\n      this.router.navigate(['/books']);\n    });\n  }\n}\nAddBookComponent.ɵfac = function AddBookComponent_Factory(t) {\n  return new (t || AddBookComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddBookComponent,\n  selectors: [[\"app-add-book\"]],\n  decls: 17,\n  vars: 0,\n  consts: [[1, \"form-group\", \"d-grid\", \"gap-3\"], [\"for\", \"exampleInputEmail1\"], [\"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"Enter email\", 1, \"form-control\", \"p-2\", \"bg-light\", \"border\"], [\"id\", \"emailHelp\", 1, \"form-text\", \"text-muted\"], [1, \"form-group\"], [\"for\", \"exampleInputPassword1\"], [\"type\", \"password\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"Password\", 1, \"form-control\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"id\", \"exampleCheck1\", 1, \"form-check-input\"], [\"for\", \"exampleCheck1\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function AddBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementStart(5, \"small\", 3);\n      i0.ɵɵtext(6, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7);\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementStart(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Check me out\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 10);\n      i0.ɵɵtext(16, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2F0ZWdvcmllcy9hZGQtYm9vay9hZGQtYm9vay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWM7Ozs7QUFJZDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FtRksiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBuZXctdGhlbWUgKi9cclxuXHJcblxyXG5cclxuLyogLm5ldy10aGVtZS1ib3JkZXIge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxZW07XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgbWFyZ2luLXRvcDogMmVtO1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG4gIH1cclxuICBcclxuICAubmV3LXRoZW1lLWJvcmRlciAuaW5wdXQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xyXG4gIH1cclxuICBcclxuICAuaGVhZGVyLWJhY2tncm91bmQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRlYmNlZDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0ZWJjZWQ7XHJcbiAgICBwYWRkaW5nOiAxLjVlbTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDFlbTtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDFlbTtcclxuICB9XHJcbiAgXHJcbiAgLmhlYWRlci1iYWNrZ3JvdW5kIHNwYW4ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIHBhZGRpbmc6IDAuNWVtO1xyXG4gICAgbWFyZ2luLXRvcDogMWVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMC4zZW07XHJcbiAgfVxyXG4gIFxyXG4gIC50aXRsZSxcclxuICAubmV3LXRoZW1lLWNvbnRlbnQge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG4gIFxyXG4gIC5uZXctdGhlbWUtY29udGVudCB7XHJcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxuICBcclxuICAubmV3LXRoZW1lLWNvbnRlbnQgdGV4dGFyZWEge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAwLjVlbTtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbiAgXHJcbiAgLm5ldy10aGVtZS1jb250ZW50IGxhYmVsIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDAuM2VtO1xyXG4gIH1cclxuICBcclxuICAubmV3LXRoZW1lLXRpdGxlIGlucHV0IHtcclxuICAgIHdpZHRoOiA1NSU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjNlbTtcclxuICAgIHBhZGRpbmc6IDAuMzVlbTtcclxuICB9XHJcbiAgXHJcbiAgYnV0dG9uICsgYnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxcmVtO1xyXG4gIH1cclxuICBcclxuICAubmV3LXRoZW1lLWJ1dHRvbnMge1xyXG4gICAgbWFyZ2luLXRvcDogMWVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuICAubmV3LXRoZW1lLWJ1dHRvbnMgYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDAuNGVtIDEuNWVtO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzMzMzMzMztcclxuICAgIGJvcmRlci1yYWRpdXM6IDAuM2VtO1xyXG4gIH1cclxuICBcclxuICBwLmVycm9yIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwLjNlbTtcclxuICAgIGNvbG9yOiByZWQ7XHJcbiAgICBwYWRkaW5nLXRvcDogMDtcclxuICB9XHJcbiAgXHJcbiAgLmlucHV0LWVycm9yIHtcclxuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiByZWQ7XHJcbiAgfSAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["AddBookComponent","constructor","apiService","router","addBookSubmitHandler","form","invalid","console","log","name","author","image","published","genre","description","value","create","subscribe","navigate","i0","ɵɵdirectiveInject","i1","ApiService","i2","Router","selectors","decls","vars","consts","template","AddBookComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\categories\\add-book\\add-book.component.ts","D:\\JS\\AngularProjects\\fandom\\fandom\\src\\app\\categories\\add-book\\add-book.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/api.service';\nimport { Book } from 'src/app/types/book';\n// import { Image } from 'src/app/types/image'\n\n\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.css']\n})\nexport class AddBookComponent {\n\n  constructor(private apiService: ApiService, private router: Router) {}\n\n  addBookSubmitHandler(form: NgForm): void {\n    if(form.invalid) {\n      console.log(`Invalid Form ${form}`)\n      return;\n    }\n  \n\n  const {name, author, image, published, genre, description} = form.value;\n  \n  this.apiService.create(name, author, image, published, genre, description).subscribe(() => {\n    console.log(name, author, image, published, genre, description)    \n    this.router.navigate(['/books'])\n  })\n}\n\n  // book: Book = {\n  //   name: '',\n  //   author: '',\n  //   image: {url: '', alt: ''},\n  //   published: 0,\n  //   genre: '',\n  //   description: '',\n  // }\n  // submitted = false;\n\n  // constructor(private apiService: ApiService) {}\n\n  // ngOnInit(): void {   \n  // }\n\n  // saveBook(): void {\n  //   const data = {\n  //     name: this.book.name,\n  //     author: this.book.author,\n  //     image: this.book.image,\n  //     published: this.book.published,\n  //     genre: this.book.genre,\n  //     description: this.book.description\n  //   };\n\n  //   this.apiService.create(data)\n  //   .subscribe({\n  //     next: (res) => {\n  //       console.log(res);\n  //       this.submitted = true;\n  //     },\n  //     error: (err) => console.log(err)\n  //   });\n    \n  // }\n\n  // newBook(): void {\n  //   this.submitted = false;\n  //   this.book = {\n  //     name: '',\n  //     author: '',\n  //     image: {url: '', alt: ''},\n  //     published: 0,\n  //     genre: '',\n  //     description: '',\n  //   }\n  // }\n}\n","<form>\n  <div class=\"form-group d-grid gap-3\">\n    <label for=\"exampleInputEmail1\">Email address</label>\n    <input type=\"email\" class=\"form-control p-2 bg-light border\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\">\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n  </div>\n  <div class=\"form-check\">\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\n    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n</form>\n\n\n\n\n\n<!-- <div class=\"container\">\n    <div class=\"new-theme-border\">\n      <div class=\"header-background\">\n        <span>New Book</span>\n      </div>\n      <form #form=\"ngForm\" (ngSubmit)=\"addBookSubmitHandler(form)\">\n        <div class=\"new-theme-title\">\n          <label for=\"themeName\">Book Name <span class=\"red\">*</span></label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            ngModel\n            #inputName=\"ngModel\"\n            required\n            minlength=\"5\"\n          />\n  \n          <ng-container *ngIf=\"inputName.touched\">\n            <p class=\"error\" *ngIf=\"inputName.errors?.['required']\">\n              Theme name is required.\n            </p>\n            <p class=\"error\" *ngIf=\"inputName.errors?.['minlength']\">\n              Theme name must be at least 5 characters long.\n            </p>\n          </ng-container>\n        </div>\n        <div class=\"new-theme-title\">\n            <label for=\"themeName\">Author <span class=\"red\">*</span></label>\n            <input\n              type=\"text\"\n              name=\"author\"\n              id=\"author\"\n              ngModel\n              #inputName=\"ngModel\"\n              required\n              minlength=\"5\"\n            />\n    \n            <ng-container *ngIf=\"inputName.touched\">\n              <p class=\"error\" *ngIf=\"inputName.errors?.['required']\">\n                Theme name is required.\n              </p>\n              <p class=\"error\" *ngIf=\"inputName.errors?.['minlength']\">\n                Theme name must be at least 5 characters long.\n              </p>\n            </ng-container>\n          </div>\n          <div class=\"new-theme-title\">\n            <label for=\"themeName\">Image <span class=\"red\">*</span></label>\n            <input\n              type=\"text\"\n              name=\"image\"\n              id=\"bookImage\"\n              ngModel\n              #inputName=\"ngModel\"\n              required\n              minlength=\"5\"\n            />\n    \n            <ng-container *ngIf=\"inputName.touched\">\n              <p class=\"error\" *ngIf=\"inputName.errors?.['required']\">\n                Theme name is required.\n              </p>\n              <p class=\"error\" *ngIf=\"inputName.errors?.['minlength']\">\n                Theme name must be at least 5 characters long.\n              </p>\n            </ng-container>\n          </div> \n       \n        <div class=\"new-theme-title\">\n            <label for=\"themeName\">Published <span class=\"red\">*</span></label>\n            <input\n              type=\"number\"\n              name=\"published\"\n              id=\"published\"\n              ngModel\n              #inputName=\"ngModel\"\n              required\n             \n            />\n    \n            <ng-container *ngIf=\"inputName.touched\">\n              <p class=\"error\" *ngIf=\"inputName.errors?.['required']\">\n                Theme name is required.\n              </p>\n              <p class=\"error\" *ngIf=\"inputName.errors?.['minlength']\">\n                Theme name must be at least 5 characters long.\n              </p>\n            </ng-container>\n          </div>\n          <div class=\"new-theme-title\">\n            <label for=\"themeName\">Genre <span class=\"red\">*</span></label>\n            <input\n              type=\"text\"\n              name=\"genre\"\n              id=\"bookGenre\"\n              ngModel\n              #inputName=\"ngModel\"\n              required\n              minlength=\"5\"\n            />\n    \n            <ng-container *ngIf=\"inputName.touched\">\n              <p class=\"error\" *ngIf=\"inputName.errors?.['required']\">\n                Theme name is required.\n              </p>\n              <p class=\"error\" *ngIf=\"inputName.errors?.['minlength']\">\n                Theme name must be at least 5 characters long.\n              </p>\n            </ng-container>\n          </div>\n          <div class=\"new-theme-content\">\n            <label for=\"postText\">Description <span class=\"red\">*</span></label>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              id=\"description\"\n              rows=\"8\"\n              class=\"height\"\n              ngModel\n              #textAreaInput=\"ngModel\"\n              required\n              minlength=\"10\"\n            ></textarea>\n    \n            <ng-container *ngIf=\"textAreaInput.touched\">\n              <p class=\"error\" *ngIf=\"textAreaInput.errors?.['required']\">\n                The field with your post is required.\n              </p>\n              <p class=\"error\" *ngIf=\"textAreaInput.errors?.['minlength']\">\n                Post must be at least 10 characters long.\n              </p>\n            </ng-container>\n          </div>\n          \n  \n        <div class=\"new-theme-buttons\">\n          <button class=\"cancel\">Cancel</button>\n          <button class=\"public\" [disabled]=\"form.invalid\">Post</button>\n        </div>\n      </form>\n    </div>\n  </div> -->"],"mappings":";;;;AAKA;AASA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,UAAsB,EAAUC,MAAc;IAA9C,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAErEC,oBAAoBA,CAACC,IAAY;IAC/B,IAAGA,IAAI,CAACC,OAAO,EAAE;MACfC,OAAO,CAACC,GAAG,CAAC,gBAAgBH,IAAI,EAAE,CAAC;MACnC;;IAIJ,MAAM;MAACI,IAAI;MAAEC,MAAM;MAAEC,KAAK;MAAEC,SAAS;MAAEC,KAAK;MAAEC;IAAW,CAAC,GAAGT,IAAI,CAACU,KAAK;IAEvE,IAAI,CAACb,UAAU,CAACc,MAAM,CAACP,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,WAAW,CAAC,CAACG,SAAS,CAAC,MAAK;MACxFV,OAAO,CAACC,GAAG,CAACC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,WAAW,CAAC;MAC/D,IAAI,CAACX,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;;AAjBalB,gBAAgB,C;mBAAhBA,gBAAgB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAhBxB,gBAAgB,C;QAAhBA,gBAAgB;EAAAyB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCd7BZ,EAAA,CAAAc,cAAA,WAAM;MAE8Bd,EAAA,CAAAe,MAAA,oBAAa;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACrDhB,EAAA,CAAAiB,SAAA,eAA4I;MAC5IjB,EAAA,CAAAc,cAAA,eAAmD;MAAAd,EAAA,CAAAe,MAAA,qDAA8C;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAE3GhB,EAAA,CAAAc,cAAA,aAAwB;MACad,EAAA,CAAAe,MAAA,eAAQ;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MACnDhB,EAAA,CAAAiB,SAAA,gBAA8F;MAChGjB,EAAA,CAAAgB,YAAA,EAAM;MACNhB,EAAA,CAAAc,cAAA,cAAwB;MACtBd,EAAA,CAAAiB,SAAA,gBAAmE;MACnEjB,EAAA,CAAAc,cAAA,gBAAoD;MAAAd,EAAA,CAAAe,MAAA,oBAAY;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAE1EhB,EAAA,CAAAc,cAAA,kBAA8C;MAAAd,EAAA,CAAAe,MAAA,cAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}